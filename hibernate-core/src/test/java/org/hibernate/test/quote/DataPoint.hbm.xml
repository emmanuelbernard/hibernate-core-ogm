<?xml version="1.0"?>
<!-- ~ Hibernate, Relational Persistence for Idiomatic Java ~ ~ Copyright 
	(c) 2013, Red Hat Middleware LLC or third-party contributors as ~ indicated 
	by the @author tags or express copyright attribution ~ statements applied 
	by the authors. All third-party contributions are ~ distributed under license 
	by Red Hat Middleware LLC. ~ ~ This copyrighted material is made available 
	to anyone wishing to use, modify, ~ copy, or redistribute it subject to the 
	terms and conditions of the GNU ~ Lesser General Public License, as published 
	by the Free Software Foundation. ~ ~ This program is distributed in the hope 
	that it will be useful, ~ but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY ~ or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU Lesser General Public License ~ for more details. ~ ~ You should have 
	received a copy of the GNU Lesser General Public License ~ along with this 
	distribution; if not, write to: ~ Free Software Foundation, Inc. ~ 51 Franklin 
	Street, Fifth Floor ~ Boston, MA 02110-1301 USA ~ -->

<!DOCTYPE hibernate-mapping
        SYSTEM
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" >

<hibernate-mapping package="org.hibernate.test.quote">
	<typedef name="enumType" class="org.hibernate.type.EnumType">
		<param name="enumClass">org.hibernate.test.quote.DataPoint$DataPointEnum</param>
	</typedef>

	<class name="DataPoint">
		<id column="ID" name="id" type="long">
			<generator class="native" />
		</id>

		<property name="fooProp" type="string" />

		<property name="fooEnum">
			<type name="enumType"/>
		</property>
		
		<set name="fooEnumList">
            <key/>
            <element type="enumType"/>
        </set>
        
        <set name="oneToMany" inverse="true">
            <key column="o2mid"/>
            <one-to-many class="AssociatedDataPoint" />
        </set>
        
        <set name="manyToMany" table="m2mjointable" inverse="false">
            <key/>
            <many-to-many class="AssociatedDataPoint"/>
        </set>
	</class>
	
	<class name="AssociatedDataPoint">
		<id column="ID" name="id" type="long">
			<generator class="native" />
		</id>
		
		<many-to-one name="manyToOne" column="o2mid" class="DataPoint"/>
        
        <set name="manyToMany" table="m2mjointable" inverse="true">
            <key/>
            <many-to-many class="DataPoint"/>
        </set>
	</class>
</hibernate-mapping>